@model FinalYear.Models.summary
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";


}
<style>
    #page-overlay {
        pointer-events: none;
    }

    div {
        padding: 10px;
    }

    select.form-control {
        border: 1px solid #ccc;
        border-radius: 5px;
        width: 100%;
    }
</style>



<div class="" id="partialview-container"></div>
<div id="page-overlay" style="display:none; position:fixed; top:0; left:0; width:100%; height:100%; background-color:rgba(255,255,255,0.5); z-index:1050;"></div>
<div id="spinner" class="spinner-grow" style="width: 3rem; height: 3rem; display:none;position:fixed; top:50%; left:50%; transform:translate(-50%, -50%); z-index:1051;" role="status"></div>


<button id="GetApi" type="button" class="btn btn-primary">Get Current Data</button>
<br /><br />
<form id="myForm">
    <select class="form-control dropdown col-4 " id="Find" name="Target">
        <option value="p2">P2</option>
        <option value="p3">P3</option>
        <option value="p4">P4</option>
        <option value="p5">P5</option>
        <option value="p6">P6</option>
        <option value="p7">P7</option>
        <option value="p8">P8</option>
        <option value="p9">P9</option>
        <option value="p10">P10</option>
        <option value="p11">P11</option>
        <option value="p12">P12</option>
        <option value="p13">P13</option>
        <option value="p14">P14</option>
        <option value="p15">P15</option>

    </select>

    <div class="row">
        <div class="col-2">
            <label for="Temperature">Temperature:</label>
            <input type="number" class="form-control" id="Temperature" name="Temperature" min="56" max="100" step="1">
        </div>

        <div class="col-2">
            <label for="Dew_Point">Dew Point:</label>
            <input type="number" class="form-control" id="Dew_Point" name="Dew_Point" min="13" max="80" step="1">
        </div>

        <div class="col-2">
            <label for="Wind_Speed">Wind Speed:</label>
            <input type="number" class="form-control" id="Wind_Speed" name="Wind_Speed" min="2" max="25" step="0.1">
        </div>

        <div class="col-2">
            <label for="Humidity">Humidity:</label>
            <input type="number" class="form-control" id="Humidity" name="Humidity" min="13" max="91" step="1">
        </div>

        <div class="col-2">
            <label for="Pressure">Pressure:</label>
            <input type="number" class="form-control" id="Pressure" name="Pressure" min="24" max="30" step="0.01">
        </div>

        <div class="col-2">
            <label for="Condition_int">Condition:</label>
            <select class="form-control" id="Condition_int" name="Condition_int">
                <option value="1">fair</option>
                <option value="2">clouds</option>
                <option value="3">mostly cloudy</option>
                <option value="4">haze</option>
                <option value="5">smoke</option>
                <option value="6">widespread dust</option>
                <option value="7">thunder in the vicinity</option>
                <option value="8">t-storm</option>
                <option value="9">light rain</option>
                <option value="10">drizzle</option>
                <option value="11">cloudy</option>
                <option value="12">rain</option>
                <option value="13">light rain with thunder</option>
                <option value="14">fog</option>
                <option value="15">heavy drizzle</option>
                <option value="16">thunder</option>
                <option value="17">light drizzle</option>
                <option value="18">rain shower</option>
            </select>
        </div>


        <div class="col-2">
            <label for="Event" >Event:</label>
            <select class="form-control" name="Event" id="Event">
                <option value="1">Yes</option>
                <option value="0">No</option>
            </select>
        </div>

        <div class="col-2">
            <label for="Seasons" >Seasons:</label>
            <select class="form-control" name="season" id="seasons">
                <option value="1">Winter</option>
                <option value="4">Summer</option>
                <option value="3">Autumn</option>
                <option value="2">Spring</option>
            </select>
        </div>

        <div class="col-2">
            <label for="typeselect">Select Type:</label>
            <select class="form-control" required name="type" id="typeselect">
                <option>Daily</option>
                <option>Weekly</option>
                <option>Monthly</option>
                <option>Quaterly</option>
            </select>
        </div>
        <div class="col-2">
            <button id="submitBtn" type="button" class="btn btn-success">Submit</button>
        </div>
    </div>
</form>


<div class="" id="partial-container"></div>


<script src="~/Scripts/jquery-3.6.1.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fomantic-ui/2.8.8/semantic.min.css" />
<script>
    $(document).ready(function () {

        $("#GetApi").click(function () {
            $.ajax({
                url: "http://api.openweathermap.org/data/2.5/weather?q=Karachi,PK&appid=677094fd637b92220b1819ef46fb5185&units=imperial",
                type: "GET",
                dataType: "json",
                success: function (data) {
                    var currentDate = new Date();
                    var currentMonth = currentDate.getMonth() + 1;
                    var currentSeason; // Declare currentSeason variable

                    switch (currentMonth) {
                        case 1:
                        case 11:
                        case 12:
                            currentSeason = 1;
                            break;
                        case 2:
                        case 3:
                        case 4:
                            currentSeason = 2;
                            break;
                        case 5:
                        case 6:
                        case 7:
                            currentSeason = 4;
                            break;
                        case 8:
                        case 9:
                        case 10:
                            currentSeason = 3;
                            break;
                        default:
                            currentSeason = 0;
                            break;
                    }

                    console.log(currentMonth);

                    var conint; // Declare conint variable

                    switch (data.weather[0].main.toLowerCase()) {
                        case "fair":
                            conint = 1;
                            break;
                        case "clouds":
                            conint = 2;
                            break;
                        case "mostly cloudy":
                            conint = 3;
                            break;
                        case "haze":
                            conint = 4;
                            break;
                        case "smoke":
                            conint = 5;
                            break;
                        case "widespread dust":
                            conint = 6;
                            break;
                        case "thunder in the vicinity":
                            conint = 7;
                            break;
                        case "t-storm":
                            conint = 8;
                            break;
                        case "light rain":
                            conint = 9;
                            break;
                        case "drizzle":
                            conint = 10;
                            break;
                        case "cloudy":
                            conint = 11;
                            break;
                        case "rain":
                            conint = 12;
                            break;
                        case "light rain with thunder":
                            conint = 13;
                            break;
                        case "fog":
                            conint = 14;
                            break;
                        case "heavy drizzle":
                            conint = 15;
                            break;
                        case "thunder":
                            conint = 16;
                            break;
                        case "light drizzle":
                            conint = 17;
                            break;
                        case "rain shower":
                            conint = 18;
                            break;
                        default:
                            conint = 1;
                            break;

                    }


                    var temperature = data.main.temp;

                    var humidity = data.main.humidity;
                    var windSpeed = data.wind.speed;
                    console.log(windSpeed)
                    a = 17
                    b = 237
                    temperature_celsius = (temperature - 32) * 5 / 9

                    gamma = (a * temperature_celsius) / (b + temperature_celsius)

                    dew_point_celsius = b * gamma / (a - gamma)
                    var pressures = data.main.pressure * 0.0295299875;
                    var mappedData = {
                        Temperature: temperature,
                        Dew_Point: dew_point_celsius,
                        Wind_Speed: windSpeed,
                        Humidity: humidity,
                        Pressure: pressures.toFixed(2),
                        Condition_int: conint,
                        Event: data.someEventValue,
                        Seasons: currentSeason
                    };
                    $("#Temperature").val(mappedData.Temperature);
                    $("#Dew_Point").val(mappedData.Dew_Point);
                    $("#Wind_Speed").val(mappedData.Wind_Speed);
                    $("#Humidity").val(mappedData.Humidity);
                    $("#Pressure").val(mappedData.Pressure);

                    $("#Condition_int").val(mappedData.Condition_int);
                    $("#Event").val(0);
                    $("#seasons").val(mappedData.Seasons);



                    var jsonString = JSON.stringify(mappedData, null, 2);
                    $("#partial-container").text(jsonString);


                },
                error: function (error) {
                    console.error("API call failed:", error);
                    alert("API call failed. Check the console for details.");
                }
            });
        });
    });
</script>
@*<script>
        $(document).ready(function () {
        });
        $("#Find").change(function () {
            MedName = $("#Find").children("option").filter(":selected").val();
            $.ajax({
                type: "POST",
                url: "Getdata",
                data: { MedName: MedName },
                beforeSend: function () {
                    $('#page-overlay').show();
                    $('#spinner').show();
                },
                success: function (data) {
                    $('#page-overlay').hide();
                    $('#spinner').hide();
                    $('#partialview-container').html(data);

                }

            });
        });
    </script>*@
<script>
    $(document).ready(function () {
    });
    $("#submitBtn").click(function () {
        var formData = $("#myForm").serialize();

        
        $.ajax({
            type: "POST",
            url: "GetPrediction",
            data: formData,
            beforeSend: function () {
                $('#page-overlay').show();
                $('#spinner').show();
            },
            success: function (data) {
                $('#page-overlay').hide();
                $('#spinner').hide();
                $('#partial-container').html(data);

            },
            error: function (xhr) {

                $('#page-overlay').hide();
                $('#spinner').hide();

                $('#partial-container').html("SomeThing Happened");
            }


        });
    });
</script>
